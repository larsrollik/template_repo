name: gpt_pr_review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches-ignore: [ release/*, hotfix/* ] # Ignore specific branch patterns for scalability
    types: [opened, reopened, synchronize]
  pull_request_review_comment:
    branches-ignore: [ release/*, hotfix/* ] # Same as above
    types: [created]

concurrency:
  group: >
    ${{ github.repository }}-${{ github.event.number || github.head_ref || github.sha }}-${{
    github.workflow }}-${{ github.event_name == 'pull_request_review_comment' && 'pr_comment' || 'pr' }}
  cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}

jobs:
  ai_code_review:
    runs-on: ubuntu-latest

    if: github.event.pull_request.draft == false # Skip draft PRs

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Perform AI-based PR review
      - name: AI PR Review
        uses: coderabbitai/ai-pr-reviewer@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          system_message: >
            You are a highly experienced software engineer tasked with reviewing
            this pull request. Provide actionable and insightful recommendations focusing on:
            - Logic
            - Security
            - Performance
            - Data races
            - Consistency
            - Error handling
            - Maintainability
            - Modularity
            - Complexity
            - Optimization
            - Best practices (DRY, SOLID, KISS)
            Focus on addressing major concerns while ignoring minor issues.
          summarize: >
            Create a markdown response containing:
            ## Walkthrough
            A high-level summary of the changes within 100 words.
            ## Changes
            A markdown table summarizing the changes. Group similar changes into
            a single row. Avoid additional commentary as this will be posted
            on the pull request.

          summarize_release_notes: >
            Summarize the release notes as concise bullet points:
            - **Category** (e.g., New Feature, Bug Fix, Refactor, etc.)
            - **Impact**: Focus on end-user-facing changes.
            - Limit to 50-100 words and exclude implementation details.

          label_reviews: >
            [enhancement, performance, bug, improvement, refactor]
